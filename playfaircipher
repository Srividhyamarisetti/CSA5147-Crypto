#include <stdio.h>
#include <string.h>
#include <ctype.h>
#define SIZE 5
void createMatrix(char key[], char matrix[SIZE][SIZE]) {
    int alpha[26] = {0};
    int x = 0, y = 0;
    int keyLen = strlen(key);
    for (int i = 0; i < keyLen; i++) {
        if (key[i] == 'J') key[i] = 'I';  
        if (alpha[key[i] - 'A'] == 0 && isalpha(key[i])) {
            matrix[x][y++] = key[i];
            alpha[key[i] - 'A'] = 1;
            if (y == SIZE) {
                y = 0;
                x++;
            }
        }
    }

    for (char ch = 'A'; ch <= 'Z'; ch++) {
        if (ch == 'J') continue;  
        if (alpha[ch - 'A'] == 0) {
            matrix[x][y++] = ch;
            alpha[ch - 'A'] = 1;
            if (y == SIZE) {
                y = 0;
                x++;
            }
        }
    }
}
void printMatrix(char matrix[SIZE][SIZE]) {
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            printf("%c ", matrix[i][j]);
        }
        printf("\n");
    }
}
void prepareText(char text[]) {
    int len = strlen(text);
    for (int i = 0; i < len; i++) {
        if (text[i] == 'J') text[i] = 'I'; 
    }
    for (int i = 0; i < len - 1; i += 2) {
        if (text[i] == text[i + 1]) {
            for (int j = len; j > i + 1; j--) {
                text[j] = text[j - 1];
            }
            text[i + 1] = 'X';
            len++;
        }
    }
    if (len % 2 != 0) {
        text[len] = 'X';
        text[len + 1] = '\0';
    }
}

void findPosition(char matrix[SIZE][SIZE], char ch, int *row, int *col) {
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            if (matrix[i][j] == ch) {
                *row = i;
                *col = j;
                return;
            }
        }
    }
}

void playfairEncrypt(char text[], char matrix[SIZE][SIZE]) {
    int row1, col1, row2, col2;
    for (int i = 0; text[i] != '\0'; i += 2) {
        findPosition(matrix, text[i], &row1, &col1);
        findPosition(matrix, text[i + 1], &row2, &col2);

        if (row1 == row2) {
            text[i] = matrix[row1][(col1 + 1) % SIZE];
            text[i + 1] = matrix[row2][(col2 + 1) % SIZE];
        } else if (col1 == col2) {
            text[i] = matrix[(row1 + 1) % SIZE][col1];
            text[i + 1] = matrix[(row2 + 1) % SIZE][col2];
        } else {
            text[i] = matrix[row1][col2];
            text[i + 1] = matrix[row2][col1];
        }
    }
}

int main() {
    char key[50], text[100];
    char matrix[SIZE][SIZE];
    printf("Enter the key: ");
    scanf("%s", key);
    for (int i = 0; key[i]; i++) {
        key[i] = toupper(key[i]);
    }
    createMatrix(key, matrix);
    printf("Playfair Matrix:\n");
    printMatrix(matrix);
    printf("Enter the plaintext: ");
    scanf("%s", text);
    for (int i = 0; text[i]; i++) {
        text[i] = toupper(text[i]);
    }
    prepareText(text);
    playfairEncrypt(text, matrix);
    printf("Encrypted text: %s\n", text);
    return 0;
}
